{"version":3,"file":"static/js/319.220799ca.chunk.js","mappings":"0LACA,QAAuB,oB,+BCOvB,MA+CA,EA/CaA,KAET,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAkB3C,OAhBAK,EAAAA,EAAAA,WAAU,KACND,GAAa,GACIE,WACb,IACI,MAAMC,QAAaC,EAAAA,EAAAA,IAAUZ,GAC7BG,EAAWQ,EAAKE,KACpB,CAAE,MAAOR,GACLC,EAASD,EAAMS,QACnB,CAAC,QACGN,GAAa,EACjB,GAEJO,IACD,CAACf,KAIAgB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKV,IAAaW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBd,IAASW,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,yBAAuBZ,EAAMS,YAC1CI,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAASJ,SACnBf,GAAWA,EAAQoB,IAAIT,IACpBG,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKK,IACDV,EAAKW,aAAY,kCAAAC,OACuBZ,EAAKW,cAAY,GAAAC,OAChDC,GACTC,IAAKd,EAAKe,KACVC,MAAM,UAEVX,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAKe,QACTV,EAAAA,EAAAA,KAAA,KAAAD,UAAGC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBACNC,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAKiB,cAVJjB,EAAKkB,e,gKCnClC,MAAMC,EAAU,mCAChBC,EAAAA,EAAMC,SAASC,QAAU,+BAElB,MAAMC,EAAqB1B,gBACPuB,EAAAA,EAAMI,IAAI,8BAADZ,OAA+BO,KAC/CrB,KAAK2B,QAGZC,EAAmB7B,gBACLuB,EAAAA,EAAMI,IAAI,wBAADZ,OAAyBO,EAAO,WAAAP,OAAUe,KAC1D7B,KAAK2B,QAGZG,EAAiB/B,gBACHuB,EAAAA,EAAMI,IAAI,SAADZ,OAAUzB,EAAO,aAAAyB,OAAYO,KAC7CrB,KAGPC,EAAYF,gBACEuB,EAAAA,EAAMI,IAAI,SAADZ,OAAUzB,EAAO,qBAAAyB,OAAoBO,KACrDrB,KAGP+B,EAAehC,gBACDuB,EAAAA,EAAMI,IAAI,SAADZ,OAAUzB,EAAO,qBAAAyB,OAAoBO,KACrDrB,I","sources":["webpack://woolf-rep-hw-05-movies/./src/components/Cast/style.module.css?18a3","components/Cast/Cast.jsx","api/movieFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"style_list__YzdFa\"};","import { fetchCast } from \"api/movieFetch\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport css from \"./style.module.css\"\nimport noImage from \"../../assets/noImage.png\"\nimport Loader from \"components/Loader/Loader\";\n\n\nconst Cast = () => {\n\n    const { movieId } = useParams();\n    const [casting, setCasting] = useState();\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const castData = async () => {\n            try {\n                const data = await fetchCast(movieId);\n                setCasting(data.cast);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            };\n        };\n        castData();\n    }, [movieId]);\n\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            {error && <p>Something went wrong: {error.message}</p>}\n            <ul className={css.list}>\n                {casting && casting.map(cast => (\n                    <li key={cast.cast_id} >\n                        <img src={\n                            cast.profile_path\n                                ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                                : `${noImage}`}\n                            alt={cast.name}\n                            width='64px'\n                        />\n                        <p>{cast.name}</p>\n                        <p><b>Character: </b></p>\n                        <p>{cast.character}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '162c66808f40d9926cd1cd1521481975';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchQueryMovies = async (query) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const fetchCast = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data;\n};"],"names":["Cast","movieId","useParams","casting","setCasting","useState","error","setError","isLoading","setIsLoading","useEffect","async","data","fetchCast","cast","message","castData","_jsxs","children","_jsx","Loader","className","css","map","src","profile_path","concat","noImage","alt","name","width","character","cast_id","API_KEY","axios","defaults","baseURL","fetchPopularMovies","get","results","fetchQueryMovies","query","fetchMovieById","fetchReviews"],"sourceRoot":""}